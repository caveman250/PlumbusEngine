cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
cmake_policy(VERSION 2.8)

project(PlumbusEngine)

option(ASSIMP_BUILD_ASSIMP_TOOLS "" FALSE)
option(ASSIMP_BUILD_TESTS "" FALSE)
option(ASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT "" FALSE)
option(ASSIMP_BUILD_ALL_EXPORTERS_BY_DEFAULT "" FALSE)
option(ASSIMP_BUILD_OBJ_IMPORTER "" TRUE)
option(ASSIMP_BUILD_COLLADA_IMPORTER "" TRUE)
option(GLFW_BUILD_DOCS "" FALSE)
option(GLFW_BUILD_EXAMPLES "" FALSE)
option(GLFW_BUILD_TESTS "" FALSE)
option(GLFW_INSTALL "" FALSE)
option(SPIRV_CROSS_CLI "" FALSE)
option(SPIRV_CROSS_ENABLE_CPP "" FALSE)
option(SPIRV_CROSS_ENABLE_C_API "" FALSE)
option(SPIRV_CROSS_ENABLE_GLSL "" FALSE)
option(SPIRV_CROSS_ENABLE_HLSL "" FALSE)
option(SPIRV_CROSS_ENABLE_MSL "" FALSE)
option(SPIRV_CROSS_ENABLE_REFLECT "" FALSE)
option(SPIRV_CROSS_ENABLE_TESTS "" FALSE)
option(SPIRV_CROSS_ENABLE_UTIL "" FALSE)


if (MSVC)
#fix for assimp on windows
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4100")
endif (MSVC)

if(WIN32 AND NOT MSVC)
    #fix for assimp under mingw
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas")
endif(WIN32 AND NOT MSVC)

if(CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_CONFIGURATION_TYPES Debug Release Distribution)
    set(CMAKE_CONFIGURATION_TYPES "${CMAKE_CONFIGURATION_TYPES}" CACHE STRING
        "Reset the configurations to what we need"
        FORCE)

    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_LINKER_FLAGS_RELEASE "${CMAKE_LINKER_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}")

    set(CMAKE_CXX_FLAGS_DISTRIBUTION "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_C_FLAGS_DISTRIBUTION "${CMAKE_C_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_LINKER_FLAGS_DISTRIBUTION "${CMAKE_LINKER_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_EXE_LINKER_FLAGS_DISTRIBUTION "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}")

    set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS
        $<$<CONFIG:Debug>:PL_DEBUG=1>
        $<$<CONFIG:Release>:PL_RELEASE=1>
        $<$<CONFIG:Distribution>:PL_DIST=1>)
else()
    if(CMAKE_BUILD_TYPE MATCHES Debug)
        add_definitions(-DPL_DEBUG=1)
    endif()

    if(CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)
        add_definitions(-DPL_RELEASE=1)
    endif()

    if(CMAKE_BUILD_TYPE MATCHES Release)
        add_definitions(-DPL_DIST=1)
    endif()

    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_LINKER_FLAGS_RELEASE "${CMAKE_LINKER_FLAGS_RELWITHDEBINFO}")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}")
endif()

add_subdirectory(PlumbusTester)
add_subdirectory(Engine)
if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Android" )
    add_subdirectory(third_party/glfw)
endif(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Android" )
add_subdirectory(third_party/assimp)
set(spirv-compiler-options ${spirv-compiler-options} -fPIC)
add_subdirectory(third_party/SPIRV-Cross)
message(${spirv-compiler-options})
add_subdirectory(third_party/glslang)

